#cloze
Perl modules are a set of related functions in a
library file.

`

perl perl_modules
^


#basic_reverse
Implements a default import method for
modules

Exporter module

`


#codediff
require Foo::Bar;

require "Foo::Bar";

changes the '::' into '/' resulting in a search
for 'Foo/Bar.pm' in @INC

does not change '::' into '/' and so will not
find the module in @INC

`


#basic
If you want to to do the following:
'
`$require $class;`
`
What must you do?

Wrap the expression in an eval:
'
`eval "require $class"`

`


#cloze
Files with a .{{{pmc}}} extension, if found, are
loaded in place of any file ending in a {{{.pm}}}
extension.

`

`


#basic
What are the differences between the `use` and
`require` keywords?

%`use` is evaluated at compile time whereas
`require` is evaluated at run time,`use` will
import the module as well,`require` can take an
expression while `use` can only take a
bareword,`use` accepts arguments that will be
passed to `import` and `require` does not,`use`
does not behave like a function whereas `require`
does%

`



#cloze
The `{{{@INC}}}` array contains the list of places
that the `{{{do
EXPR}}}`, `{{{require}}}`, or `{{{use}}}` constructs look for their
library files.

`

perl_modules perlvar



